{"version":3,"file":"synth-kit.js","sources":["../lib/core.js","../lib/kit/gain.js","../lib/kit/gain-envelope.js","../lib/kit/mono-buffer.js","../lib/kit/source.js","../lib/kit/noise.js","../lib/kit/vca.js","../lib/kit/osc.js","../lib/kit/lfo.js","../lib/kit/vco.js","../lib/kit/filter.js","../lib/kit/vcf.js","../lib/instruments/kick.js","../lib/instruments/snare.js","../lib/instruments/monosynth.js"],"sourcesContent":["const isString = (o) => typeof o === \"string\"\nconst isFn = (o) => typeof o === \"function\"\nconst { exp, E } = Math\n\nexport function ampToGain (amp) {\n  return (exp(amp) - 1) / (E - 1)\n}\n\n/**\n * Update a node property with a value. If the property is a parameter and\n * the value is a node, it will connect them\n */\nexport function plug (node, name, value) {\n  const target = node[name]\n  if (isFn(value)) value = value()\n  if (target === undefined || value === undefined || value === null) {\n    // ignore\n  } else if (target.value !== undefined) {\n    // it's a parameter\n    if (isFn(value.connect)) {\n      value.connect(target)\n    } else {\n      target.setValueAtTime(value, 0)\n    }\n  } else {\n    // replace the old value with a new one\n    node[name] = value\n  }\n}\n\n/**\n * Update a node\n */\nexport function update (node, newState, initialState) {\n  if (initialState) node.state = Object.assign({}, initialState)\n  else if (!node.state) node.state = {}\n\n  if (newState) {\n    const state = node.state\n    // diffing algorithm\n    Object.keys(newState).forEach(key => {\n      const newValue = newState[key]\n      const prevValue = state[key]\n      if (newValue !== prevValue) {\n        plug(node, key, newValue)\n        state[key] = newValue\n      }\n    })\n  }\n  return node\n}\n\nexport function polyphony (init, options = {}) {\n  const max = options.maxVoices || 16\n  const voices = []\n  for (var i = 0; i < max; i++) voices[i] = init()\n  let current = -1\n\n  return function next () {\n    current = (current + 1) % max\n    return voices[current]\n  }\n}\n\nexport function connected (object, connections) {\n  connections.reduce((src, next) => {\n    if (isString(src)) src = object[src]\n    if (isString(next)) next = object[next]\n    src.connect(next)\n    return next\n  })\n  return object\n}\n\nexport function connect (...nodes) {\n  nodes.reduce((prev, next) => {\n    prev.connect(next)\n    return next\n  })\n  return nodes\n}\n\n/**\n * Create a connect function with for the given node\n * The return function have two special characteristics:\n * - It's chainable\n * - It accepts `true` as param to connect to node's AudioContext's destination\n */\nexport function connectWith (node, parent) {\n  if (!parent) throw Error(\"no parent!\")\n  const conn = node.connect\n  return function (dest) {\n    if (dest === true) conn.call(node, node.context.destination)\n    else conn.apply(node, arguments)\n    return parent\n  }\n}\n","import { update } from \"../core\"\n\n/**\n * Create a Gain node.\n * Unlike the normal Gain node, the gain of this one is 0 by default\n */\nexport default function Gain (ac, state) {\n  const gain = update(ac.createGain(), state, Gain.state)\n  if (gain.state.gain === 0) gain.gain.setValueAtTime(0, 0)\n  return gain\n}\n\nGain.state = {\n  gain: 0\n}\n","import Gain from \"./gain\"\n\n/**\n * Create a Gain envelope. Any audio source can be connected to an\n * audio envelope.\n *\n * @example\n * const [osc, adsr] = connect(Osc(ac), GainEnvelope(ac))\n * adsr.trigger()\n */\nexport default function GainEnvelope (ac, state) {\n  const env = Gain(ac)\n  env.state = Object.assign({}, GainEnvelope.state, state)\n\n  /**\n   * Trigger the envelope. It triggers the attack phase of the envelope\n   * at a given time and the release phase if a duration is given.\n   * @param {Number} [when=now]\n   * @param {Number} [duration]\n   * @return {GainEnvelope} this\n   */\n  env.trigger = function (time, dur) {\n    if (!time) time = ac.currentTime\n    console.log(\"trigger env\", time, dur, env.state)\n    const release = triggerAdsr(time, env.gain, env.state)\n    if (dur) release(time + dur)\n    return release\n  }\n  return env\n}\nGainEnvelope.state = {\n  attack: 0.01,\n  release: 0.2\n}\n\nexport function triggerAdsr (time, param, adsr) {\n  param.cancelScheduledValues(0)\n  // attack phase\n  const attack = adsr.attack || 0.01\n  param.setValueAtTime(0, time)\n  time += attack\n  param.linearRampToValueAtTime(1, time)\n\n  // decay-sustain phase\n  const sustain = adsr.sustain || 1\n  if (sustain !== 1) {\n    time += (adsr.decay || 0.01)\n    param.exponentialRampToValueAtTime(sustain, time)\n  }\n\n  const release = time => {\n    param.exponentialRampToValueAtTime(0.00001, time - 0.01)\n    param.setValueAtTime(0, time)\n  }\n\n  // only trigger release if hold is defined\n  if (adsr.hold !== undefined) {\n    time += (adsr.hold || 0)\n    param.setValueAtTime(sustain, time)\n    release(time + (adsr.release || 0.1))\n  }\n\n  return release\n}\n","\nexport default function MonoBuffer (ac, samples, generator, inverse = false) {\n  const buffer = ac.createBuffer(1, samples, ac.sampleRate)\n  const data = buffer.getChannelData(0)\n  for (let i = 0; i < samples; i++) {\n    data[i] = generator(inverse ? samples - i : i)\n  }\n  return buffer\n}\n","import { update } from \"../core\"\n\nexport default function Source (ac, buffer, state) {\n  const source = update(ac.createBufferSource(), state, Source.state)\n  source.buffer = buffer\n  return source\n}\nSource.state = {\n  detune: 0,\n  loop: false,\n  loopStart: undefined,\n  loopEnd: undefined,\n  playbackRate: 1\n}\n","import MonoBuffer from \"./mono-buffer\"\nimport Source from \"./source\"\n\n/**\n * Noise oscillator\n */\nexport default function Noise (ac, state) {\n  state = Object.assign({}, Noise.state, state)\n  const duration = state.duration * ac.sampleRate\n  const buffer = MonoBuffer(ac, duration, () => Math.random() * 2 - 1)\n  const noise = Source(ac, buffer, { loop: true })\n  noise.start()\n  return noise\n}\nNoise.state = {\n  type: \"white\",\n  duration: 1,\n  gain: 0.7,\n  loop: true\n}\n","import { connectWith } from \"../core\"\nimport Gain from \"./gain\"\nimport GainEnvelope from \"./gain-envelope\"\n\n/**\n * Voltage controlled amplified\n */\nexport default function VCA (ac, state) {\n  state = Object.assign({}, VCA.state, state)\n  const vca = Gain(ac, state)\n  vca.envelope = GainEnvelope(ac, state.envelope)\n  vca.connect(vca.envelope)\n\n  // API\n  vca.state = state\n  vca.connect = connectWith(vca.envelope, vca)\n  vca.trigger = vca.envelope.trigger\n  return vca\n}\nVCA.state = {\n  gain: 0.8,\n  envelope: GainEnvelope.state\n}\n","import { update } from \"../core\"\n\n/**\n * Create an Oscillator\n * A oscillator is always started\n */\nexport default function Osc (ac, state) {\n  const osc = update(ac.createOscillator(), state, Osc.state)\n  if (osc.state.start !== false) osc.start(osc.state.start || 0)\n  return osc\n}\nOsc.state = {\n  type: \"sine\",\n  frequency: 440,\n  detune: 0\n}\n","import { update, connectWith } from \"../core\"\nimport Osc from \"./osc\"\nimport Gain from \"./gain\"\n\n/**\n\n * Low Frequency Oscillator\n */\nexport default function LFO (ac, state) {\n  const lfo = Osc(ac)\n  lfo.amp = Gain(ac)\n  lfo.rate = lfo.frequency\n  lfo.amount = lfo.amp.gain\n  lfo.update = (state) => update(lfo, state)\n  lfo.connect(lfo.amp)\n  lfo.connect = connectWith(lfo.amp, lfo)\n  update(lfo, LFO.state)\n}\nLFO.state = {\n  type: \"sine\",\n  // the lfo frequency\n  rate: 3,\n  // the lfo intensity\n  amount: 0.5\n}\n","import { plug, connectWith } from \"../core\"\nimport Osc from \"./osc\"\nimport LFO from \"./lfo\"\n\n/**\n * Voltage Controlled Oscillator. An oscillator with the detune parameter\n * modulated by a low frequency oscillator\n */\nexport default function VCO (ac, state) {\n  state = Object.assign({}, VCO.state, state)\n  const vco = Osc(ac, state)\n  vco.modulator = LFO(ac, state.modulator)\n  plug(vco, \"detune\", vco.modulator)\n\n  /**\n   * Connect to a node\n   * @chainable\n   * @param {AudioNode} destination\n   * @return {VCO} this\n   */\n  vco.connect = connectWith(vco, vco)\n  return vco\n}\nVCO.state = {\n  type: \"sawtooth\",\n  frequency: 440,\n  detune: 0,\n  modulator: {\n    rate: 5,\n    amount: 1,\n  }\n}\n","import { update } from \"../core\"\n\n/**\n * Create a Filter\n */\nexport default function Filter (ac, state) {\n  return update(ac.createBiquadFilter(), state, Filter.state)\n}\nFilter.state = {\n  type: \"lowpass\",\n  frequency: 350,\n  detune: 0,\n  Q: 1,\n}\n","import Filter from \"./filter\"\n\n/**\n * Voltage Controlled Filter\n */\nexport default function VCF (ac, state, envState) {\n  if (!envState) envState = state\n  const filter = Filter(ac, state)\n  // filter.envelope = FilterEnvelope(state)\n  // filter.trigger = filter.envelope.trigger\n  filter.trigger = () => {\n    // TODO\n  }\n  console.log(\"FILTER\", filter, filter.state)\n  return filter\n}\n","import { connect, connectWith } from \"../core\"\nimport VCO from \"../kit/vco\"\nimport VCA from \"../kit/vca\"\n\nexport function Kick (ac, state) {\n  state = Object.assign({}, Kick.state, state)\n  const kick = {\n    oscillator: VCO(ac, state.oscillator),\n    amp: VCA(ac, state.amp)\n  }\n  connect(kick.oscillator, kick.amp)\n\n  // API\n  kick.state = state\n  kick.connect = connectWith(kick.amp, kick)\n  kick.trigger = kick.amp.trigger\n\n  return kick\n}\nKick.state = {\n  oscillator: {\n    type: \"sine\",\n    frequency: 48\n  },\n  amp: {\n    gain: 1,\n    envelope: {\n      attack: 0.01,\n      hold: 0.1,\n      release: 0.1\n    }\n  }\n}\n\nexport default Kick\n","import { connect, connectWith } from \"../core\"\nimport Noise from \"../kit/noise\"\nimport VCA from \"../kit/vca\"\n\nexport function Snare (ac, state) {\n  state = Object.assign({}, Snare.state, state)\n  const snare = {\n    state,\n    noise: Noise(ac, state.noise),\n    amp: VCA(ac, state.amp)\n  }\n  connect(snare.noise, snare.amp)\n\n  // API\n  snare.connect = connectWith(snare.amp, snare)\n  snare.trigger = snare.amp.trigger\n\n  return snare\n}\nSnare.state = {\n  noise: {\n    type: \"white\"\n  },\n  amp: {\n    gain: 0.3,\n    envelope: {\n      attack: 0.01,\n      hold: 0.1,\n      release: 0.1\n    }\n  }\n}\n\nexport default Snare\n","import { connectWith, connect } from \"../core\"\nimport VCO from \"../kit/vco\"\nimport VCA from \"../kit/vca\"\nimport VCF from \"../kit/vcf\"\n\n/**\n * MonoSynth\n */\nexport function MonoSynth (ac, state) {\n  if (!state) state = MonoSynth.defaults\n  else state = Object.assign({}, MonoSynth.defaults, state)\n\n  // Create the synth\n  const synth = {\n    state,\n    oscillator: VCO(ac, state.oscillator),\n    filter: VCF(ac, state.filter),\n    amp: VCA(ac, state, state.envelope),\n  }\n  connect(synth.oscillator, synth.filter, synth.amp)\n\n  // Synth API\n  synth.connect = connectWith(synth.amp, synth)\n  synth.trigger = (freq, time, dur) => {\n    time = time || ac.currentTime\n    if (freq) synth.oscillator.frequency.setValueAtTime(freq, time)\n    synth.amp.trigger(time, dur)\n  }\n  return synth\n}\nMonoSynth.defaults = {\n  oscillator: {\n    type: \"sawtooth\"\n  },\n  filter: {\n    type: \"lowpass\",\n    frequency: 4000,\n  },\n  envelope: {\n    attack: 0.01,\n    decay: 0.1,\n    sustain: 0.8,\n    release: 0.3,\n  },\n  gain: 0.5\n}\n\nexport default MonoSynth\n"],"names":["isString","o","isFn","exp","Math","E","ampToGain","amp","plug","node","name","value","target","undefined","connect","setValueAtTime","update","newState","initialState","state","Object","assign","keys","forEach","newValue","key","prevValue","polyphony","init","options","max","maxVoices","voices","i","current","next","connected","object","connections","reduce","src","nodes","prev","connectWith","parent","Error","conn","dest","call","context","destination","apply","arguments","Gain","ac","gain","createGain","GainEnvelope","env","trigger","time","dur","currentTime","log","release","triggerAdsr","param","adsr","cancelScheduledValues","attack","linearRampToValueAtTime","sustain","decay","exponentialRampToValueAtTime","hold","MonoBuffer","samples","generator","inverse","buffer","createBuffer","sampleRate","data","getChannelData","Source","source","createBufferSource","Noise","duration","random","noise","loop","start","VCA","vca","envelope","Osc","osc","createOscillator","LFO","lfo","rate","frequency","amount","VCO","vco","modulator","Filter","createBiquadFilter","VCF","envState","filter","Kick","kick","oscillator","Snare","snare","MonoSynth","defaults","synth","freq"],"mappings":"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"}