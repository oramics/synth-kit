{"version":3,"file":"synth-kit.js","sources":["../lib/core.js","../lib/nodes.js","../lib/synths.js","../lib/drums.js"],"sourcesContent":["const isString = (o) => typeof o === \"string\"\nconst isFn = (o) => typeof o === \"function\"\nconst { exp, E } = Math\n\nexport function ampToGain (amp) {\n  return (exp(amp) - 1) / (E - 1)\n}\n\n/**\n * Update a node property with a value. If the property is a parameter and\n * the value is a node, it will connect them\n */\nexport function plug (node, name, value) {\n  const target = node[name]\n  if (isFn(value)) value = value()\n  if (target === undefined || value === undefined || value === null) {\n    // ignore\n  } else if (target.value !== undefined) {\n    // it's a parameter\n    if (isFn(value.connect)) value.connect(target)\n    else target.setValueAtTime(value, 0)\n  } else if (target === undefined) {\n    // replace the old value with a new one\n    node[name] = value\n  }\n}\n\n/**\n * Update a node\n */\nexport function update (node, newState) {\n  const state = node.state || {}\n  Object.keys(newState).forEach(key => {\n    const newValue = newState[key]\n    const prevValue = state[key]\n    if (newValue !== prevValue) {\n      plug(node, key, newValue)\n      state[key] = newValue\n    }\n    node.state = state\n  })\n  return node\n}\n\nexport function triggerAttack (time, param, adsr) {\n  param.cancelScheduledValues(0)\n  // attack phase\n  const attack = adsr.attack || 0.01\n  param.setValueAtTime(0, time)\n  time += attack\n  param.linearRampToValueAtTime(1, time)\n\n  // decay-sustain phase\n  const sustain = adsr.sustain || 1\n  if (sustain !== 1) {\n    time += (adsr.decay || 0.01)\n    param.exponentialRampToValueAtTime(adsr.sustain, time)\n  }\n\n  // only trigger release if hold is defined\n  if (adsr.hold !== undefined) {\n    time += (adsr.hold || 0)\n    param.setValueAtTime(adsr.sustain)\n    time += (adsr.release || 0.1)\n    param.exponentialRampToValueAtTime(0.00001, time - 0.01)\n    param.setValueAtTime(0, time)\n  }\n}\n\nexport function polyphony (init, options = {}) {\n  const max = options.maxVoices || 16\n  const voices = []\n  for (var i = 0; i < max; i++) voices[i] = init()\n  let current = -1\n\n  return function next () {\n    current = (current + 1) % max\n    return voices[current]\n  }\n}\n\nexport function connected (object, connections) {\n  connections.reduce((src, next) => {\n    if (isString(src)) src = object[src]\n    if (isString(next)) next = object[next]\n    src.connect(next)\n    return next\n  })\n  return object\n}\n\nexport function connect (...nodes) {\n  nodes.reduce((prev, next) => {\n    prev.connect(next)\n    return next\n  })\n  const last = nodes[nodes.length - 1]\n  return connectWith(last)\n}\n\n/**\n * Create a connect function with for the given node\n * The return function have two special characteristics:\n * - It's chainable\n * - It accepts `true` as param to connect to node's AudioContext's destination\n */\nexport function connectWith (node) {\n  const conn = node.connect\n  return function (dest) {\n    if (dest === true) conn.call(node, node.context.destination)\n    else conn.apply(node, arguments)\n    return node\n  }\n}\n","import { update, triggerAttack } from \"./core\"\n\nfunction createNode (ac, name, initialState, state, params) {\n  const node = ac[\"create\" + name].apply(ac, params)\n  node.state = initialState\n  return state ? update(node, state) : node\n}\n\n/**\n * Create an Oscillator\n * A oscillator is always started\n */\nexport function Osc (ac, state) {\n  const osc = createNode(ac, \"Oscillator\", Osc.state, state)\n  const start = state ? state.start : 0\n  if (start !== false) osc.start(start || 0)\n  return osc\n}\nOsc.state = {\n  type: \"sine\",\n  frequency: 440,\n  detune: 0\n}\n\nexport function Filter (ac, state) {\n  return createNode(ac, \"BiquadFilter\", Filter.state, state)\n}\nFilter.state = {\n  type: \"lowpass\",\n  frequency: 350,\n  detune: 0,\n  Q: 1,\n}\n\n/**\n * Create a Gain node. By default a it's gain value it's 0\n */\nexport const Gain = (ac, state) => {\n  const gain = createNode(ac, \"Gain\", Osc.state, state)\n  if (gain.state.gain === 0) gain.gain.setValueAtTime(0, 0)\n  return gain\n}\nGain.state = {\n  gain: 0\n}\n\nexport function GainEnvelope (ac, state) {\n  const env = Gain(null, ac)\n  env.state = state\n  env.trigger = function (time, dur) {\n    triggerAttack(time, env.gain, env.state)\n  }\n  return env\n}\nGainEnvelope.state = {\n  attack: 0.01,\n  release: 0.2\n}\n\nexport function FilterEnvelope (ac, state) {\n}\n","import { connectWith, connect, connected, update, plug } from \"./core\"\nimport { Osc, Filter, Gain, GainEnvelope, FilterEnvelope } from \"./nodes\"\n\n/**\n * Low Frequency Oscillator\n */\nexport function LFO (ac, state) {\n  const lfo = Osc(ac)\n  lfo.amp = Gain(ac)\n  lfo.rate = lfo.frequency\n  lfo.amount = lfo.amp.gain\n  lfo.update = (state) => update(lfo, state)\n  lfo.connect = connect(lfo, lfo.amp)\n  return update(lfo, LFO.state)\n}\nLFO.state = {\n  type: \"sine\",\n  // the lfo frequency\n  rate: 3,\n  // the lfo intensity\n  amount: 0.5\n}\n\n/**\n * Voltage Controlled Oscillator\n */\nexport function VCO (ac, state) {\n  state = Object.assign({}, VCO.state, state)\n  const vco = Osc(ac, state)\n  vco.modulator = LFO(ac, state.modulator)\n  plug(vco, \"frequency\", vco.modulator)\n  vco.connect = connectWith(vco)\n  return vco\n}\nVCO.state = {\n  type: \"sawtooth\",\n  frequency: 440,\n  detune: 0,\n  modulator: {\n    rate: 2,\n    amount: 0.2,\n  }\n}\n\nexport function VCF (ac, state) {\n  const filter = Filter(ac, state)\n  filter.envelope = FilterEnvelope(state)\n  filter.trigger = filter.envelope.trigger\n  return filter\n}\n\n/**\n * Voltage controlled amplified\n */\nexport function VCA (ac, state, envState) {\n  if (envState) envState = state\n  const vca = Gain(ac, state)\n  vca.envelope = GainEnvelope(ac, envState)\n  vca.trigger = vca.envelope.trigger\n}\n\nexport function MonoSynth (ac, state) {\n  if (!state) state = MonoSynth.defaults\n  else state = Object.assign({}, MonoSynth.defaults, state)\n\n  const synth = connected({\n    oscillator: VCO(ac, state.oscillator),\n    filter: VCF(ac, state.filter),\n    amp: VCA(ac, state, state.envelope),\n  }, [\"oscillator\", \"filter\", \"envelope\", \"amp\"])\n  synth.state = state\n  synth.trigger = (freq, time, dur) => {\n    synth.oscillator.frequency.setValueAt(freq, time)\n    synth.amp.envelope.trigger(time, dur)\n  }\n\n  return synth\n}\nMonoSynth.defaults = {\n  oscillator: {\n    type: \"sawtooth\"\n  },\n  envelope: {\n    attack: 0.01,\n    decay: 0.1,\n    sustain: 0.8,\n    release: 0.3,\n  },\n  gain: 0.5\n}\n","\nexport function Kick (ac, state) {\n\n}\n"],"names":["isString","o","isFn","exp","Math","E","ampToGain","amp","plug","node","name","value","target","undefined","connect","setValueAtTime","update","newState","state","keys","forEach","newValue","key","prevValue","triggerAttack","time","param","adsr","cancelScheduledValues","attack","linearRampToValueAtTime","sustain","decay","exponentialRampToValueAtTime","hold","release","polyphony","init","options","max","maxVoices","voices","i","current","next","connected","object","connections","reduce","src","nodes","prev","last","length","connectWith","conn","dest","call","context","destination","apply","arguments","createNode","ac","initialState","params","Osc","osc","start","Filter","Gain","gain","GainEnvelope","env","trigger","dur","FilterEnvelope","LFO","lfo","rate","frequency","amount","VCO","Object","assign","vco","modulator","VCF","filter","envelope","VCA","envState","vca","MonoSynth","defaults","synth","oscillator","freq","setValueAt","Kick"],"mappings":"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"}